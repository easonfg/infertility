### hormones correlation
rm(list=ls())
library(ggpubr)
library(ggplot2)
library(stringr)
library(dplyr)
library(tidyverse)
library(aod)
org.data = read.csv('cleaned.infertile.data.csv')
org.data$Infertility.diagnosis = toupper(org.data$Infertility.diagnosis)
org.data = org.data[grep('IVF', org.data$Cycle.Type),]
LOD = org.data[org.data$X == 'LOD', , drop = F]
LOD
sub.org.data = org.data[-nrow(org.data),]
## get rid of NA AMH
sub.org.data = sub.org.data[!is.na(sub.org.data$AMH),]
### filter out missing values
infertility.data = sub.org.data[sub.org.data$Missing != 1,]
### remove NA row
infertility.data = infertility.data[!is.na(infertility.data$X),]
infertility.data
### extract cytokines data
cytokines.data = infertility.data[grep('IL8', colnames(infertility.data)):grep('CSF1', colnames(infertility.data))]
### turn all values lower than LOD to LOD
cytokines.data[nrow(cytokines.data),]
for (col.i in colnames(cytokines.data)){
LOD_x = as.numeric(LOD[col.i])
cytokines.data[which(cytokines.data[,col.i] < LOD_x), col.i] = LOD_x
}
cytokines.data = data.frame(cytokines.data)
infertility.data[infertility.data$Fertile == 1, 'Infertility.diagnosis'] = 'FERTILE'
infertility.data$Infertility.diagnosis = gsub('MALE FACTOR, ', '', infertility.data$Infertility.diagnosis)
infertility.data$Infertility.diagnosis = gsub('MALE, ', '', infertility.data$Infertility.diagnosis)
infertility.data$Infertility.diagnosis = gsub(', MALE FACTOR', '', infertility.data$Infertility.diagnosis)
infertility.data[grep('UNEXPLAINED', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'UNEXPLAINED'
infertility.data[grep('PCOS', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'PCOS'
infertility.data[grep('DOR', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'DOR'
infertility.data[grep('ENDOM', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'ENDOMETRIOSIS'
infertility.data[grep('UTERINE', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'UTERINE'
infertility.data$Infertility.diagnosis
colnames(infertility.data)
fertile.data = bind_cols(infertility.data[, c('Cycle.Date', 'Cycle.Type', 'AMH',
# "ESTRADIOL", "Progestrone", "TESTOSTERONE", 'T4',
'CORTISOL', 'ESTRADIOL',	'Progestrone',	'TESTOSTERONE',	'T3',	'T4',
'Age', 'BMI', 'Fertile', 'Infertility.diagnosis')], cytokines.data)
fertile.data
fertile.data$Age = log(fertile.data$Age, 2)
fertile.data$BMI = log(fertile.data$BMI, 2)
fertile.data$AMH = log(fertile.data$AMH, 2)
fertile.data
### hormones correlation
rm(list=ls())
library(ggpubr)
library(ggplot2)
library(stringr)
library(dplyr)
library(tidyverse)
library(aod)
org.data = read.csv('cleaned.infertile.data.csv')
org.data$Infertility.diagnosis = toupper(org.data$Infertility.diagnosis)
org.data = org.data[grep('IVF', org.data$Cycle.Type),]
org.data = read.csv('../cleaned.infertile.data.csv')
org.data$Infertility.diagnosis = toupper(org.data$Infertility.diagnosis)
org.data = org.data[grep('IVF', org.data$Cycle.Type),]
LOD = org.data[org.data$X == 'LOD', , drop = F]
LOD
sub.org.data = org.data[-nrow(org.data),]
## get rid of NA AMH
sub.org.data = sub.org.data[!is.na(sub.org.data$AMH),]
### filter out missing values
infertility.data = sub.org.data[sub.org.data$Missing != 1,]
### remove NA row
infertility.data = infertility.data[!is.na(infertility.data$X),]
infertility.data
### extract cytokines data
cytokines.data = infertility.data[grep('IL8', colnames(infertility.data)):grep('CSF1', colnames(infertility.data))]
### turn all values lower than LOD to LOD
cytokines.data[nrow(cytokines.data),]
for (col.i in colnames(cytokines.data)){
LOD_x = as.numeric(LOD[col.i])
cytokines.data[which(cytokines.data[,col.i] < LOD_x), col.i] = LOD_x
}
cytokines.data = data.frame(cytokines.data)
infertility.data[infertility.data$Fertile == 1, 'Infertility.diagnosis'] = 'FERTILE'
infertility.data$Infertility.diagnosis = gsub('MALE FACTOR, ', '', infertility.data$Infertility.diagnosis)
infertility.data$Infertility.diagnosis = gsub('MALE, ', '', infertility.data$Infertility.diagnosis)
infertility.data$Infertility.diagnosis = gsub(', MALE FACTOR', '', infertility.data$Infertility.diagnosis)
infertility.data[grep('UNEXPLAINED', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'UNEXPLAINED'
infertility.data[grep('PCOS', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'PCOS'
infertility.data[grep('DOR', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'DOR'
infertility.data[grep('ENDOM', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'ENDOMETRIOSIS'
infertility.data[grep('UTERINE', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'UTERINE'
infertility.data$Infertility.diagnosis
colnames(infertility.data)
fertile.data = bind_cols(infertility.data[, c('Cycle.Date', 'Cycle.Type', 'AMH',
# "ESTRADIOL", "Progestrone", "TESTOSTERONE", 'T4',
'CORTISOL', 'ESTRADIOL',	'Progestrone',	'TESTOSTERONE',	'T3',	'T4',
'Age', 'BMI', 'Fertile', 'Infertility.diagnosis')], cytokines.data)
fertile.data
fertile.data$Age = log(fertile.data$Age, 2)
fertile.data$BMI = log(fertile.data$BMI, 2)
fertile.data$AMH = log(fertile.data$AMH, 2)
fertile.data
## remove columsn with single unique value ##
fertile.data = Filter(function(x)(length(unique(x))>1), fertile.data)
## factorize the cycle dates and infertility diagnosis
# fertile.data$Cycle.Date = factor(fertile.data$Cycle.Date)
# fertile.data$Cycle.Type = factor(fertile.data$Cycle.Type)
fertile.data$Cycle.Type
fertile.data$Infertility.diagnosis = factor(fertile.data$Infertility.diagnosis)
fertile.data$Cycle.Date
fertile.data$TESTOSTERONE
quantile(fertile.data$TESTOSTERONE)
quantile(fertile.data$TESTOSTERONE)[1]
quartiles = quantile(fertile.data$TESTOSTERONE)
fertile.data$TESTOSTERONE < quartiles[1]
fertile.data$TESTOSTERONE < quartiles[2]
fertile.data$TESTOSTERONE[fertile.data$TESTOSTERONE < quartiles[2],]
fertile.data$TESTOSTERONE[fertile.data$TESTOSTERONE < quartiles[2]]
fertile.data[fertile.data$TESTOSTERONE < quartiles[2],]
lower.quart.testosterone = fertile.data[fertile.data$TESTOSTERONE < quartiles[2],]
upper.quart.testosterone = fertile.data[fertile.data$TESTOSTERONE > quartiles[4],]
lower.quart.testosterone
sub.fertile.data = bind_rows(lower.quart.testosterone, upper.quart.testosterone)
source('~/.active-rstudio-document')
