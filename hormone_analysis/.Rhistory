### hormones correlation
rm(list=ls())
library(ggpubr)
library(ggplot2)
library(stringr)
library(dplyr)
library(tidyverse)
library(aod)
org.data = read.csv('cleaned.infertile.data.csv')
org.data$Infertility.diagnosis = toupper(org.data$Infertility.diagnosis)
org.data = org.data[grep('IVF', org.data$Cycle.Type),]
LOD = org.data[org.data$X == 'LOD', , drop = F]
LOD
sub.org.data = org.data[-nrow(org.data),]
## get rid of NA AMH
sub.org.data = sub.org.data[!is.na(sub.org.data$AMH),]
### filter out missing values
infertility.data = sub.org.data[sub.org.data$Missing != 1,]
### remove NA row
infertility.data = infertility.data[!is.na(infertility.data$X),]
infertility.data
### extract cytokines data
cytokines.data = infertility.data[grep('IL8', colnames(infertility.data)):grep('CSF1', colnames(infertility.data))]
### turn all values lower than LOD to LOD
cytokines.data[nrow(cytokines.data),]
for (col.i in colnames(cytokines.data)){
LOD_x = as.numeric(LOD[col.i])
cytokines.data[which(cytokines.data[,col.i] < LOD_x), col.i] = LOD_x
}
cytokines.data = data.frame(cytokines.data)
infertility.data[infertility.data$Fertile == 1, 'Infertility.diagnosis'] = 'FERTILE'
infertility.data$Infertility.diagnosis = gsub('MALE FACTOR, ', '', infertility.data$Infertility.diagnosis)
infertility.data$Infertility.diagnosis = gsub('MALE, ', '', infertility.data$Infertility.diagnosis)
infertility.data$Infertility.diagnosis = gsub(', MALE FACTOR', '', infertility.data$Infertility.diagnosis)
infertility.data[grep('UNEXPLAINED', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'UNEXPLAINED'
infertility.data[grep('PCOS', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'PCOS'
infertility.data[grep('DOR', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'DOR'
infertility.data[grep('ENDOM', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'ENDOMETRIOSIS'
infertility.data[grep('UTERINE', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'UTERINE'
infertility.data$Infertility.diagnosis
colnames(infertility.data)
fertile.data = bind_cols(infertility.data[, c('Cycle.Date', 'Cycle.Type', 'AMH',
# "ESTRADIOL", "Progestrone", "TESTOSTERONE", 'T4',
'CORTISOL', 'ESTRADIOL',	'Progestrone',	'TESTOSTERONE',	'T3',	'T4',
'Age', 'BMI', 'Fertile', 'Infertility.diagnosis')], cytokines.data)
fertile.data
fertile.data$Age = log(fertile.data$Age, 2)
fertile.data$BMI = log(fertile.data$BMI, 2)
fertile.data$AMH = log(fertile.data$AMH, 2)
fertile.data
### hormones correlation
rm(list=ls())
library(ggpubr)
library(ggplot2)
library(stringr)
library(dplyr)
library(tidyverse)
library(aod)
org.data = read.csv('cleaned.infertile.data.csv')
org.data$Infertility.diagnosis = toupper(org.data$Infertility.diagnosis)
org.data = org.data[grep('IVF', org.data$Cycle.Type),]
org.data = read.csv('../cleaned.infertile.data.csv')
org.data$Infertility.diagnosis = toupper(org.data$Infertility.diagnosis)
org.data = org.data[grep('IVF', org.data$Cycle.Type),]
LOD = org.data[org.data$X == 'LOD', , drop = F]
LOD
sub.org.data = org.data[-nrow(org.data),]
## get rid of NA AMH
sub.org.data = sub.org.data[!is.na(sub.org.data$AMH),]
### filter out missing values
infertility.data = sub.org.data[sub.org.data$Missing != 1,]
### remove NA row
infertility.data = infertility.data[!is.na(infertility.data$X),]
infertility.data
### extract cytokines data
cytokines.data = infertility.data[grep('IL8', colnames(infertility.data)):grep('CSF1', colnames(infertility.data))]
### turn all values lower than LOD to LOD
cytokines.data[nrow(cytokines.data),]
for (col.i in colnames(cytokines.data)){
LOD_x = as.numeric(LOD[col.i])
cytokines.data[which(cytokines.data[,col.i] < LOD_x), col.i] = LOD_x
}
cytokines.data = data.frame(cytokines.data)
infertility.data[infertility.data$Fertile == 1, 'Infertility.diagnosis'] = 'FERTILE'
infertility.data$Infertility.diagnosis = gsub('MALE FACTOR, ', '', infertility.data$Infertility.diagnosis)
infertility.data$Infertility.diagnosis = gsub('MALE, ', '', infertility.data$Infertility.diagnosis)
infertility.data$Infertility.diagnosis = gsub(', MALE FACTOR', '', infertility.data$Infertility.diagnosis)
infertility.data[grep('UNEXPLAINED', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'UNEXPLAINED'
infertility.data[grep('PCOS', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'PCOS'
infertility.data[grep('DOR', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'DOR'
infertility.data[grep('ENDOM', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'ENDOMETRIOSIS'
infertility.data[grep('UTERINE', infertility.data$Infertility.diagnosis), 'Infertility.diagnosis'] = 'UTERINE'
infertility.data$Infertility.diagnosis
colnames(infertility.data)
fertile.data = bind_cols(infertility.data[, c('Cycle.Date', 'Cycle.Type', 'AMH',
# "ESTRADIOL", "Progestrone", "TESTOSTERONE", 'T4',
'CORTISOL', 'ESTRADIOL',	'Progestrone',	'TESTOSTERONE',	'T3',	'T4',
'Age', 'BMI', 'Fertile', 'Infertility.diagnosis')], cytokines.data)
fertile.data
fertile.data$Age = log(fertile.data$Age, 2)
fertile.data$BMI = log(fertile.data$BMI, 2)
fertile.data$AMH = log(fertile.data$AMH, 2)
fertile.data
## remove columsn with single unique value ##
fertile.data = Filter(function(x)(length(unique(x))>1), fertile.data)
## factorize the cycle dates and infertility diagnosis
# fertile.data$Cycle.Date = factor(fertile.data$Cycle.Date)
# fertile.data$Cycle.Type = factor(fertile.data$Cycle.Type)
fertile.data$Cycle.Type
fertile.data$Infertility.diagnosis = factor(fertile.data$Infertility.diagnosis)
fertile.data$Cycle.Date
fertile.data$TESTOSTERONE
quantile(fertile.data$TESTOSTERONE)
quantile(fertile.data$TESTOSTERONE)[1]
quartiles = quantile(fertile.data$TESTOSTERONE)
fertile.data$TESTOSTERONE < quartiles[1]
fertile.data$TESTOSTERONE < quartiles[2]
fertile.data$TESTOSTERONE[fertile.data$TESTOSTERONE < quartiles[2],]
fertile.data$TESTOSTERONE[fertile.data$TESTOSTERONE < quartiles[2]]
fertile.data[fertile.data$TESTOSTERONE < quartiles[2],]
lower.quart.testosterone = fertile.data[fertile.data$TESTOSTERONE < quartiles[2],]
upper.quart.testosterone = fertile.data[fertile.data$TESTOSTERONE > quartiles[4],]
lower.quart.testosterone
sub.fertile.data = bind_rows(lower.quart.testosterone, upper.quart.testosterone)
source('~/.active-rstudio-document')
debugSource('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
print(all.res[all.res$padj < 0.1,])
print(all.res[all.res$padj < 0.05,])
all.res
debugSource('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
debugSource('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
Q
Q
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
# gg.res = ggplot(subset(dot.plot.data, padj < 0.1), aes(hormone, Cytokines)) +
gg.res = ggplot(subset(dot.plot.data, raw.P < 0.05), aes(hormone, Cytokines)) +
geom_point(aes(size = -log10(padj), fill = Estimate),
colour = 'black', shape = 21) +
geom_text(aes(label=round(Estimate,2)),size = 3, hjust=-0.5, vjust=0.5) +
scale_fill_gradient2(low = 'blue', mid = 'white', high = 'red') +
ylab('') + xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 11)) +
labs(size = '-log10(raw.P.val)', fill = 'coefficients') +
theme_bw()
print(gg.res)
gg.res = ggplot(subset(dot.plot.data, padj < 0.1), aes(hormone, Cytokines)) +
geom_point(aes(size = -log10(padj), fill = Estimate),
colour = 'black', shape = 21) +
geom_text(aes(label=round(Estimate,2)),size = 3, hjust=-0.5, vjust=0.5) +
scale_fill_gradient2(low = 'blue', mid = 'white', high = 'red') +
ylab('') + xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 11)) +
labs(size = '-log10(FDR)', fill = 'coefficients') +
theme_bw()
print(gg.res)
# gg.res = ggplot(subset(dot.plot.data, padj < 0.1), aes(hormone, Cytokines)) +
gg.res = ggplot(subset(dot.plot.data, raw.P < 0.05), aes(hormone, Cytokines)) +
geom_point(aes(size = -log10(padj), fill = Estimate),
colour = 'black', shape = 21) +
geom_text(aes(label=round(Estimate,2)),size = 3, hjust=-0.5, vjust=0.5) +
scale_fill_gradient2(low = 'blue', mid = 'white', high = 'red') +
ylab('') + xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 11)) +
labs(size = '-log10(raw.P.val)', fill = 'coefficients') +
theme_bw()
print(gg.res)
# for (hormone in c("ESTRADIOL", "Progestrone", "TESTOSTERONE", 'T4')){
# for (hormone in c('CORTISOL', 'ESTRADIOL',	'Progestrone',	'TESTOSTERONE',	'T3',	'T4')){
for (hormone in c('quartile.testosterone')){
cyto.int = sig.all.res[sig.all.res$hormone %in% hormone, 'Cytokines']
cyto.chunks.cd = split(cyto.int, ceiling(seq_along(cyto.int)/10))
print(hormone)
pdf(paste0('hormone_cor/', hormone, '_regression', '.pdf'), height = 10, width = 20, onefile = TRUE)
for (i in cyto.chunks.cd){
print(i)
temp.fertile.data.cd = sub.plot.data[sub.plot.data$cytokines %in% i, ]
print(
ggplot(temp.fertile.data.cd,aes(measurements, get(hormone))) +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula= y~x) +
facet_wrap(vars(cytokines), scales = 'free', nrow = 2)
)
}
dev.off()
}
pdf(paste0(hormone, '_regression', '.pdf'), height = 10, width = 20, onefile = TRUE)
# for (hormone in c("ESTRADIOL", "Progestrone", "TESTOSTERONE", 'T4')){
# for (hormone in c('CORTISOL', 'ESTRADIOL',	'Progestrone',	'TESTOSTERONE',	'T3',	'T4')){
for (hormone in c('quartile.testosterone')){
cyto.int = sig.all.res[sig.all.res$hormone %in% hormone, 'Cytokines']
cyto.chunks.cd = split(cyto.int, ceiling(seq_along(cyto.int)/10))
print(hormone)
pdf(paste0(hormone, '_regression', '.pdf'), height = 10, width = 20, onefile = TRUE)
for (i in cyto.chunks.cd){
print(i)
temp.fertile.data.cd = sub.plot.data[sub.plot.data$cytokines %in% i, ]
print(
ggplot(temp.fertile.data.cd,aes(measurements, get(hormone))) +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula= y~x) +
facet_wrap(vars(cytokines), scales = 'free', nrow = 2)
)
}
dev.off()
}
sig.all.res
sub.plot.data
long.fertile.data
fertile.data
long.fertile.data = gather(sub.fertile.data, cytokines, measurements, IL8:CSF1, factor_key=TRUE)
cytokines.int =  unique(sig.all.res$Cytokines)
cytokines.int
long.fertile.data = long.fertile.data[long.fertile.data$cytokines %in% cytokines.int,]
long.fertile.data
cyto.chunks.cd
for (i in cyto.chunks.cd){
print(
ggboxplot(long.fertile.data, x = "cytokines", y = 'measurements',
color = "Infertility.diagnosis", palette = "jco", add = "jitter") +
# stat_compare_means(comparisons = my_comparisons) + # Add pairwise comparisons p-value
theme(legend.position="none")+
facet_wrap(vars(cytokines), scales = 'free', nrow = 2)
)
}
dev.off()
dev.off()
dev.off()
print(
ggboxplot(long.fertile.data, x = "cytokines", y = 'measurements',
color = "Infertility.diagnosis", palette = "jco", add = "jitter") +
# stat_compare_means(comparisons = my_comparisons) + # Add pairwise comparisons p-value
theme(legend.position="none")+
facet_wrap(vars(cytokines), scales = 'free', nrow = 2)
)
print(
ggboxplot(long.fertile.data, x = "cytokines", y = 'measurements',
color = "quartile.testosterone", palette = "jco", add = "jitter") +
# stat_compare_means(comparisons = my_comparisons) + # Add pairwise comparisons p-value
theme(legend.position="none")+
facet_wrap(vars(cytokines), scales = 'free', nrow = 2)
)
print(
ggboxplot(long.fertile.data, x = "cytokines", y = 'measurements',
color = "quartile.testosterone", palette = "jco", add = "jitter") +
# stat_compare_means(comparisons = my_comparisons) + # Add pairwise comparisons p-value
#theme(legend.position="none")+
facet_wrap(vars(cytokines), scales = 'free', nrow = 2)
)
sig.all.res
sig.all.res
# cyto.int = sig.all.res[sig.all.res$hormone %in% hormone, 'Cytokines']
cyto.int = long.fertile.data$cytokines
cyto.int
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
debugSource('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
cyto.chunks.cd
cyto.int
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
debugSource('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/hormones_vs_cycleDates.R')
fertile.data
infertility.data$Cycle.Type
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
Q
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
debugSource('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
lm.model
summary(lm.model)
Q
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/testosterone.quartile.ana.R')
debugSource('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/hormones_vs_cycleDates.R')
fertile.data
### hormones correlation
rm(list=ls())
library(ggpubr)
library(ggplot2)
library(stringr)
library(dplyr)
library(tidyverse)
library(aod)
org.data = read.csv('../cleaned.infertile.data.csv')
org.data$Infertility.diagnosis = toupper(org.data$Infertility.diagnosis)
LOD = org.data[org.data$X == 'LOD', , drop = F]
LOD
## add cycle name according to cycle date
org.data = add_column(org.data, Cycle.Name = 'O', .after = 'Cycle.Date')
org.data[(org.data$Cycle.Date <= 5) & (!is.na(org.data$Cycle.Date)), 'Cycle.Name'] = 'M'
org.data[(org.data$Cycle.Date > 14) & (!is.na(org.data$Cycle.Date)), 'Cycle.Name'] = 'L'
org.data[(org.data$Cycle.Date <= 13) & (org.data$Cycle.Date > 5) & (!is.na(org.data$Cycle.Date)), 'Cycle.Name'] = 'F'
org.data$Cycle.Name
debugSource('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/hormones_vs_cycleDates.R')
long.fertile.data = gather(fertile.data, cytokines, measurements, IL8:CSF1, factor_key=TRUE)
# long.fertile.data = long.fertile.data[long.fertile.data$cytokines %in% cytokines.int,]
long.fertile.data
Q
debugSource('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/hormones_vs_cycleDates.R')
Q
long.fertile.data
debugSource('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/hormones_vs_cycleDates.R')
long.fertile.data$Cycle.Name
fertile.data = bind_cols(infertility.data[, c('Cycle.Date', 'Cycle.Type', 'AMH', 'Cycle.Name',
# "ESTRADIOL", "Progestrone", "TESTOSTERONE", 'T4',
'CORTISOL', 'ESTRADIOL',	'Progestrone',	'TESTOSTERONE',	'T3',	'T4',
'Age', 'BMI', 'Fertile', 'Infertility.diagnosis')])
fertile.data
long.fertile.data = gather(fertile.data, cytokines, measurements, CORTISOL:T4, factor_key=TRUE)
# long.fertile.data = long.fertile.data[long.fertile.data$cytokines %in% cytokines.int,]
long.fertile.data
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/hormones_vs_cycleDates.R')
ggboxplot(long.fertile.data, x = 'Cycle.Name', y = 'measurements',
color = "Cycle.Name", palette = "jco", add = "jitter") +
# stat_compare_means(comparisons = my_comparisons) + # Add pairwise comparisons p-value
#theme(legend.position="none")+
facet_wrap(vars(hormones), scales = 'free', nrow = 2)
# long.fertile.data = long.fertile.data[long.fertile.data$cytokines %in% cytokines.int,]
long.fertile.data$hormones
# long.fertile.data = long.fertile.data[long.fertile.data$cytokines %in% cytokines.int,]
long.fertile.data$Cycle.Name
# long.fertile.data = long.fertile.data[long.fertile.data$cytokines %in% cytokines.int,]
long.fertile.data$Cycle.Name = factor(long.fertile.data$Cycle.Name, levels = c('M', 'F', 'O', 'L'))
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/hormones_vs_cycleDates.R')
ggboxplot(long.fertile.data, x = 'Cycle.Name', y = 'measurements',
color = "Cycle.Name", palette = "jco", add = "jitter") +
# stat_compare_means(comparisons = my_comparisons) + # Add pairwise comparisons p-value
#theme(legend.position="none")+
facet_wrap(vars(hormones), scales = 'free', nrow = 2)
cycle.var = 'Cycle.Date'
ggboxplot(long.fertile.data, x = cycle.var, y = 'measurements',
color = cycle.var, palette = "jco", add = "jitter") +
# stat_compare_means(comparisons = my_comparisons) + # Add pairwise comparisons p-value
#theme(legend.position="none")+
facet_wrap(vars(hormones), scales = 'free', nrow = 2)
long.fertile.data$Cycle.Date %>% unique()
library(RColorBrewer)
# Define the number of colors you want
nb.cols <- long.fertile.data$Cycle.Date %>% unique() %>% length()
mycolors <- colorRampPalette(brewer.pal(8, "Set2"))(nb.cols)
cycle.var = 'Cycle.Date'
ggboxplot(long.fertile.data, x = cycle.var, y = 'measurements',
color = cycle.var, palette = "jco", add = "jitter") +
scale_fill_manual(values = mycolors) +
# stat_compare_means(comparisons = my_comparisons) + # Add pairwise comparisons p-value
#theme(legend.position="none")+
facet_wrap(vars(hormones), scales = 'free', nrow = 2)
ggboxplot(long.fertile.data, x = cycle.var, y = 'measurements',
palette = "jco", add = "jitter") +
scale_fill_manual(values = mycolors) +
# stat_compare_means(comparisons = my_comparisons) + # Add pairwise comparisons p-value
#theme(legend.position="none")+
facet_wrap(vars(hormones), scales = 'free', nrow = 2)
ggboxplot(long.fertile.data, x = cycle.var, y = 'measurements',
color = cycle.var, palette = "jco", add = "jitter") +
scale_color_manual(values = mycolors) +
# stat_compare_means(comparisons = my_comparisons) + # Add pairwise comparisons p-value
#theme(legend.position="none")+
facet_wrap(vars(hormones), scales = 'free', nrow = 2)
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/hormones_vs_cycleDates.R')
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/hormones_vs_cycleDates.R')
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/hormones_vs_cycleDates.R')
source('~/Desktop/egg_myriad/88_infertility_samples/hormone_analysis/hormones_vs_cycleDates.R')
